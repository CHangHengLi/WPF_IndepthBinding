<Window x:Class="CollectionBindingDemo.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CollectionBindingDemo"
        xmlns:vm="clr-namespace:CollectionBindingDemo.ViewModels"
        mc:Ignorable="d"
        Title="WPF集合绑定MVVM示例" Height="500" Width="750"
        WindowStartupLocation="CenterScreen">
    
    <Window.Resources>
        <!-- 错误提示样式 -->
        <ControlTemplate x:Key="ErrorTemplate">
            <StackPanel>
                <AdornedElementPlaceholder x:Name="placeholder"/>
                <TextBlock Text="{Binding ElementName=placeholder, Path=AdornedElement.(Validation.Errors)[0].ErrorContent}"
                           Foreground="Red" FontSize="11" Margin="0,2,0,0"/>
            </StackPanel>
        </ControlTemplate>

        <Style x:Key="ValidatedTextBoxStyle" TargetType="TextBox">
            <Setter Property="Validation.ErrorTemplate" Value="{StaticResource ErrorTemplate}"/>
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="BorderBrush" Value="Red"/>
                    <Setter Property="BorderThickness" Value="1"/>
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    
    <Grid Margin="10">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="2*" />
            <ColumnDefinition Width="1*" />
        </Grid.ColumnDefinitions>
        
        <!-- 左侧：集合数据列表 -->
        <TextBlock Grid.Row="0" Grid.Column="0" 
                   Text="人员列表" FontWeight="Bold" FontSize="16" Margin="0,0,0,5"/>
        
        <DataGrid Grid.Row="1" Grid.Column="0" 
                  ItemsSource="{Binding People}" 
                  SelectedItem="{Binding SelectedPerson, Mode=TwoWay}"
                  AutoGenerateColumns="False"
                  IsReadOnly="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  SelectionMode="Single"
                  SelectionUnit="FullRow"
                  BorderThickness="1"
                  BorderBrush="#DDDDDD"
                  Margin="0,0,10,0">
            <DataGrid.Columns>
                <DataGridTextColumn Header="姓名" Binding="{Binding Name}" Width="*" />
                <DataGridTextColumn Header="年龄" Binding="{Binding Age}" Width="60" />
            </DataGrid.Columns>
        </DataGrid>
        
        <!-- 右侧：操作区域 -->
        <StackPanel Grid.Row="0" Grid.RowSpan="2" Grid.Column="1" Margin="0,0,0,0">
            <TextBlock Text="添加新人员" FontWeight="Bold" FontSize="16" Margin="0,0,0,10"/>
            
            <TextBlock Text="姓名:" Margin="0,5,0,5"/>
            <TextBox Text="{Binding NewPersonName, UpdateSourceTrigger=PropertyChanged}" 
                     Height="25" Margin="0,0,0,10"/>
            
            <TextBlock Text="年龄:" Margin="0,5,0,5"/>
            <TextBox Style="{StaticResource ValidatedTextBoxStyle}"
                     Text="{Binding NewPersonAgeText, 
                            UpdateSourceTrigger=PropertyChanged, 
                            ValidatesOnExceptions=True,
                            NotifyOnValidationError=True,
                            ValidatesOnDataErrors=True}" 
                     Height="25" Margin="0,0,0,20"/>
            
            <UniformGrid Rows="3" Columns="1" HorizontalAlignment="Stretch">
                <Button Content="添加" 
                        Command="{Binding AddPersonCommand}" 
                        Height="30" Margin="0,0,0,10"/>
                
                <Button Content="删除所选" 
                        Command="{Binding RemovePersonCommand}" 
                        Height="30" Margin="0,0,0,10"/>
                
                <Button Content="清空列表" 
                        Command="{Binding ClearPeopleCommand}" 
                        Height="30" Margin="0,0,0,10"/>
            </UniformGrid>
            
            <Separator Margin="0,10,0,10"/>
            
            <UniformGrid Rows="1" Columns="2" HorizontalAlignment="Stretch">
                <Button Content="批量添加" 
                        Command="{Binding AddRangeCommand}" 
                        Height="30" Margin="0,0,5,0"/>
                
                <Button Content="筛选>30岁" 
                        Command="{Binding FilterOlderThanCommand}" 
                        Height="30" Margin="5,0,0,0"/>
            </UniformGrid>
        </StackPanel>
        
        <!-- 状态栏 -->
        <Border Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" 
                Background="#F5F5F5" BorderBrush="#DDDDDD" BorderThickness="1"
                Margin="0,10,0,0" Padding="10,5">
            <TextBlock Text="{Binding StatusMessage}" FontStyle="Italic"/>
        </Border>
        
        <!-- 底部说明 -->
        <TextBlock Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" 
                   Margin="0,10,0,0" TextWrapping="Wrap" FontSize="12" Foreground="#666666">
            <Run Text="说明: 这是WPF集合绑定的MVVM示例。该示例使用了ObservableCollection的扩展实现，支持元素属性变化监听和批量操作。"/>
            <LineBreak/>
            <Run Text="您可以直接在数据网格中编辑人员信息，并观察属性变化事件的触发情况。"/>
        </TextBlock>
    </Grid>
</Window> 